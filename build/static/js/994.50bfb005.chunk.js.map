{"version":3,"file":"static/js/994.50bfb005.chunk.js","mappings":"+SAoBA,MAAMA,EAAiBC,IACrB,MAAMC,EAAUD,EAAMC,SAAW,CAAC,EAC5BC,EAA4B,cAAlBD,EAAQE,MAAwB,UAAY,UAG5D,IAAIC,EAaJ,OAPEA,EAHAH,EAAQI,YAAYC,QALD,GAMnBL,EAAQI,YAAYC,OAND,IAM2B,EAExBL,EAAQI,YAERJ,EAAQI,YAAYE,QACxC,CAACC,EAAGC,IAAUA,EAXG,KAgBnBC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAC,SAAA,EACHF,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,KAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,GAAIb,EAASc,UAAU,YAAWJ,SACtCX,EAAQE,SAEXU,EAAAA,EAAAA,KAAA,KACEG,UAAWC,IACT,QAAUf,EACV,iBACA,QACA,QACAU,SAEDX,EAAQiB,cAEXL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,YAAWJ,SAC/BX,EAAQoB,WAGbR,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAiBJ,SAAEX,EAAQqB,aAExCZ,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIR,GAAuB,IAAImB,KAAI,CAACC,EAAQf,KAEtCC,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAAaC,GAAG,IAAGR,SAAA,CACrBY,EAAOC,QACNZ,EAAAA,EAAAA,KAAA,OACEa,IAAKF,EAAOC,MACZT,UAAU,+BACVW,IAAI,KAGPH,EAAOtB,UACNW,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uCAAsCJ,UACnDC,EAAAA,EAAAA,KAAA,QACEG,UAAWC,IACT,eACA,iBACA,WAAaO,EAAOtB,QACpB,QAAUsB,EAAOtB,SACjBU,SAEDY,EAAOI,KAAK,SAlBVnB,KAyBdR,EAAQI,YAAYC,OAASF,EAAoBE,SAChDO,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,IAAGR,UACVC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uCAAsCJ,UACnDF,EAAAA,EAAAA,MAAA,QAAMM,UAAU,2DAA0DJ,SAAA,CACvEX,EAAQI,YAAYC,OAtEhB,EAsEsC,kBAOvDO,EAAAA,EAAAA,KAACF,EAAAA,EAAAA,KAAS,CAACK,UAAU,aAAYJ,UAC/BF,EAAAA,EAAAA,MAACmB,EAAAA,EAAG,CAACb,UAAU,qBAAoBJ,SAAA,EACjCC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAG,OAAMnB,UACZF,EAAAA,EAAAA,MAAA,MAAIM,UAAU,mBAAkBJ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBJ,UACnCC,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACC,GAAG,iBAAgBxB,SAAC,aAAmBA,UAEzDF,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,4BAA2BJ,SAAA,CAC/C,KACDC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,0BAA4B,IAAEf,EAAQoC,QAAS,YAIlExB,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBJ,UACnCC,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACC,GAAG,iBAAgBxB,SAAC,UAAgBA,UAEtDF,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,4BAA2BJ,SAAA,CAC/C,KACDC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,sBAAwB,IAAEf,EAAQqC,WAAY,YAIjEzB,EAAAA,EAAAA,KAAA,MAAIG,UAAU,mBAAkBJ,UAC9BC,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,CAACC,GAAG,iBAAgBxB,SAAC,aAAmBA,UAEzDF,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,4BAA2BJ,SAAA,CAC/C,KACDC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,8BAAiC,IAC7Cf,EAAQsC,cAAe,iBAMlC1B,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,CAAES,OAAQ,GAAI5B,UACrBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,UAAU,MACVC,SACExB,EAAAA,EAAAA,MAACyB,EAAAA,EAAO,CAACC,GAAG,iBAAgBxB,SAAA,CACzBX,EAAQwC,SAAS,iBAErB7B,UAEDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAW,CACVC,IAAK1C,EAAQwC,SACbvC,QAASA,EACTc,UAAU,eACV4B,MAAO,CAAEC,OAAQ,oBAMtB,EAqEX,UAjEiBC,KAEbpC,EAAAA,EAAAA,MAAAqC,EAAAA,SAAA,CAAAnC,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAAAjB,UACFC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACkB,GAAI,GAAGpC,UACVF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iBAAgBJ,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYJ,SAAC,mBAC3BC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBJ,UAC/BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcJ,SAAA,EAC3BF,EAAAA,EAAAA,MAACuC,EAAAA,EAAM,CAAC/C,QAAQ,SAASc,UAAU,oBAAmBJ,SAAA,EACpDC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAoB,sBAEnCH,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAAAtC,UACVC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAC/C,QAAQ,UAAUc,UAAU,eAAcJ,SAAC,WAIrDF,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAAClC,UAAU,UAASJ,SAAA,EAC9BC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAC/C,QAAQ,QAAQc,UAAU,eAAcJ,SAAC,aAGjDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAC/C,QAAQ,QAAQc,UAAU,eAAcJ,SAAC,iBAInDC,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAAClC,UAAU,qCAAoCJ,UACzDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAArC,UACLC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,sBAGjBH,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAAClC,UAAU,2BAA0BJ,UAC/CC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAC/C,QAAQ,QAAOU,UACrBC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gDAS3BH,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAAAjB,UACAuC,EAAAA,GAAY,IAAI5B,KAAI,CAACtB,EAASmD,KAE5BvC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACuB,GAAI,EAAGC,GAAI,EAAE1C,UAChBC,EAAAA,EAAAA,KAACd,EAAa,CAACE,QAASA,KADF,QAAUA,EAAQmC,SAOhDvB,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACb,UAAU,YAAWJ,UACxBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACkB,GAAI,GAAGpC,UACVC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaJ,UAC1BF,EAAAA,EAAAA,MAACuC,EAAAA,EAAM,CAAC/C,QAAQ,QAAOU,SAAA,EACrBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAY,CAACC,KAAK,SAASxC,UAAU,2BAA2B,uB,iFCtN/E,MAIMF,EAAqB2C,EAAAA,YAAiB,CAAAC,EAQzCC,KAAQ,IARkC,SAC3CC,EAAQ,GACR7C,EAAE,KACF8C,EAAI,KACJC,EAAI,UACJ9C,EACA+C,GAAIC,EAAY,UACbhE,GACJ0D,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,SAC5C,OAAoB/C,EAAAA,EAAAA,KAAKmD,EAAW,CAClCL,IAAKA,KACF3D,EACHgB,UAAWC,IAAWD,EAAWiD,EAAQJ,GAAQ,eAAgBC,GAAQ,QAAJK,OAAYL,GAAQ/C,GAAM,MAAJoD,OAAUpD,KACrG,IAEJD,EAAMsD,YAAc,QACpBtD,EAAMuD,aArBe,CACnBtD,GAAI,UACJ8C,MAAM,GAoBR,K,iFCtBA,MAIMX,EAA2BO,EAAAA,YAAiB,CAAAC,EAQ/CC,KAAQ,IARwC,SACjDC,EAAQ,KACRU,EAAI,SACJC,EAAQ,UACRvD,EAEA+C,GAAIC,EAAY,SACbQ,GACJd,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,aAC5C,IAAIa,EAAYR,EAEhB,OADIM,IAAUE,EAAY,GAAHN,OAAMF,EAAM,eACfpD,EAAAA,EAAAA,KAAKmD,EAAW,IAAKQ,EACvCb,IAAKA,EACL3C,UAAWC,IAAWD,EAAWyD,EAAWH,GAAQ,GAAJH,OAAOF,EAAM,KAAAE,OAAIG,KACjE,IAEJpB,EAAYkB,YAAc,cAC1BlB,EAAYmB,aAtBS,CACnBE,UAAU,EACVG,KAAM,SAqBR,K,sGCjBA,SAASnD,EAAIX,EAAU+D,GACrB,IAAIlE,EAAQ,EACZ,OAAOgD,EAAAA,SAAAA,IAAmB7C,GAAUgE,GAAsBnB,EAAAA,eAAqBmB,GAASD,EAAKC,EAAOnE,KAAWmE,GACjH,C,eCPA,MAAMC,EAAkB,IA6CxB,SAASC,EAAcnC,EAAKoC,EAAKC,GAC/B,MAAMC,GAActC,EAAMoC,IAAQC,EAAMD,GAAO,IAC/C,OAAOG,KAAKC,MAAMF,EAAaJ,GAAmBA,CACpD,CAEA,SAASO,EAAiB1B,EAavBC,GAAK,IAbmB,IACzBoB,EAAG,IACHpC,EAAG,IACHqC,EAAG,MACHK,EAAK,eACLC,EAAc,QACdC,EAAO,SACPC,EAAQ,UACRxE,EAAS,MACT4B,EAAK,QACL1C,EAAO,SACP0D,KACG5D,GACJ0D,EACC,OAAoB7C,EAAAA,EAAAA,KAAK,MAAO,CAC9B8C,IAAKA,KACF3D,EACH0E,KAAM,cACN1D,UAAWC,IAAWD,EAAW,GAAFmD,OAAKP,EAAQ,QAAQ,CAClD,CAAC,MAADO,OAAOjE,IAAYA,EACnB,CAAC,GAADiE,OAAIP,EAAQ,kBAAkB4B,EAC9B,CAAC,GAADrB,OAAIP,EAAQ,iBAAiB4B,GAAYD,IAE3C3C,MAAO,CACL6C,MAAO,GAAFtB,OAAKW,EAAcnC,EAAKoC,EAAKC,GAAI,QACnCpC,GAEL,gBAAiBD,EACjB,gBAAiBoC,EACjB,gBAAiBC,EACjBpE,SAAU0E,GAA8BzE,EAAAA,EAAAA,KAAK,OAAQ,CACnDG,UAAW,kBACXJ,SAAUyE,IACPA,GAET,CAEA,MAAM3C,EAA2Be,EAAAA,YAAiB,CAAAiC,EAG/C/B,KAAQ,IAHwC,QACjDgC,KACG3F,GACJ0F,EAGC,GAFA1F,EAAM4D,UAAWM,EAAAA,EAAAA,IAAmBlE,EAAM4D,SAAU,YAEhD+B,EACF,OAAOP,EAAkBpF,EAAO2D,GAGlC,MAAM,IACJoB,EAAG,IACHpC,EAAG,IACHqC,EAAG,MACHK,EAAK,eACLC,EAAc,QACdC,EAAO,SACPC,EAAQ,SACR5B,EAAQ,QACR1D,EAAO,UACPc,EAAS,SACTJ,KACGgF,GACD5F,EACJ,OAAoBa,EAAAA,EAAAA,KAAK,MAAO,CAC9B8C,IAAKA,KACFiC,EACH5E,UAAWC,IAAWD,EAAW4C,GACjChD,SAAUA,EAAWW,EAAIX,GAAUgE,IAAsBiB,EAAAA,EAAAA,cAAajB,EAAO,CAC3Ee,SAAS,MACLP,EAAkB,CACtBL,MACApC,MACAqC,MACAK,QACAC,iBACAC,UACAC,WACA5B,WACA1D,WACCyD,IACH,IAEJjB,EAAY0B,YAAc,cAC1B1B,EAAY2B,aA/FS,CACnBU,IAAK,EACLC,IAAK,IACLQ,UAAU,EACVG,SAAS,EACTL,gBAAgB,EAChBC,SAAS,GA0FX,O","sources":["pages/apps/Projects/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  ButtonGroup,\n  Badge,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\n// dummy data\nimport { projects, ProjectTypes } from \"./data\";\n\n// single project\nconst SingleProject = (props: { project: ProjectTypes }) => {\n  const project = props.project || {};\n  const variant = project.state === \"Completed\" ? \"success\" : \"warning\";\n  const displayCount = 3;\n\n  let modifiedTeamMembers;\n\n  if (\n    project.teamMembers.length <= displayCount ||\n    project.teamMembers.length - displayCount === 1\n  ) {\n    modifiedTeamMembers = project.teamMembers;\n  } else {\n    modifiedTeamMembers = project.teamMembers.filter(\n      (m, index) => index < displayCount\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Badge bg={variant} className=\"float-end\">\n          {project.state}\n        </Badge>\n        <p\n          className={classNames(\n            \"text-\" + variant,\n            \"text-uppercase\",\n            \"fs-12\",\n            \"mb-2\"\n          )}\n        >\n          {project.technology}\n        </p>\n        <h5>\n          <Link to=\"#\" className=\"text-dark\">\n            {project.title}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-4\">{project.shortDesc}</p>\n\n        <div>\n          {(modifiedTeamMembers || []).map((member, index) => {\n            return (\n              <Link key={index} to=\"#\">\n                {member.image && (\n                  <img\n                    src={member.image}\n                    className=\"avatar-sm m-1 rounded-circle\"\n                    alt=\"\"\n                  />\n                )}\n                {member.variant && (\n                  <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                    <span\n                      className={classNames(\n                        \"avatar-title\",\n                        \"rounded-circle\",\n                        \"bg-soft-\" + member.variant,\n                        \"text-\" + member.variant\n                      )}\n                    >\n                      {member.name[0]}\n                    </span>\n                  </div>\n                )}\n              </Link>\n            );\n          })}\n          {project.teamMembers.length > modifiedTeamMembers.length && (\n            <Link to=\"#\">\n              <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                <span className=\"avatar-title rounded-circle bg-soft-warning text-warning\">\n                  {project.teamMembers.length - displayCount}+\n                </span>\n              </div>\n            </Link>\n          )}\n        </div>\n      </Card.Body>\n      <Card.Body className=\"border-top\">\n        <Row className=\"align-items-center\">\n          <Col sm=\"auto\">\n            <ul className=\"list-inline mb-0\">\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Due date</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-calender me-1\"></i> {project.endDate}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Tasks</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-bars me-1\"></i> {project.totalTasks}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Comments</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-comments-alt me-1\"></i>{\" \"}\n                    {project.totalComments}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n            </ul>\n          </Col>\n          <Col sm={{ offset: 1 }}>\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"button-tooltip\">\n                  {project.progress}% completed\n                </Tooltip>\n              }\n            >\n              <ProgressBar\n                now={project.progress}\n                variant={variant}\n                className=\"mt-4 mt-sm-0\"\n                style={{ height: \"5px\" }}\n              />\n            </OverlayTrigger>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Projects = () => {\n  return (\n    <>\n      <Row>\n        <Col xs={12}>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Projects List</h4>\n            <div className=\"page-title-right\">\n              <div className=\"mt-2 mt-md-0\">\n                <Button variant=\"danger\" className=\"me-4 mb-2 mb-sm-0\">\n                  <i className=\"uil-plus me-1\"></i> Create Project\n                </Button>\n                <ButtonGroup>\n                  <Button variant=\"primary\" className=\"mb-2 mb-sm-0\">\n                    All\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-md-1\">\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Ongoing\n                  </Button>\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Finished\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-2 d-none d-sm-inline-block me-1\">\n                  <Button>\n                    <i className=\"uil uil-apps\"></i>\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"d-none d-sm-inline-block\">\n                  <Button variant=\"white\">\n                    <i className=\"uil uil-align-left-justify\"></i>\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        {(projects || []).map((project, i) => {\n          return (\n            <Col xl={4} md={6} key={\"proj-\" + project.id}>\n              <SingleProject project={project} />\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row className=\"mb-3 mt-2\">\n        <Col xs={12}>\n          <div className=\"text-center\">\n            <Button variant=\"white\">\n              <FeatherIcons icon=\"loader\" className=\"icon-dual icon-xs me-2\" />\n              Load more\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["SingleProject","props","project","variant","state","modifiedTeamMembers","teamMembers","length","filter","m","index","_jsxs","Card","children","_jsx","Badge","bg","className","classNames","technology","Link","to","title","shortDesc","map","member","image","src","alt","name","Row","Col","sm","OverlayTrigger","placement","overlay","Tooltip","id","endDate","totalTasks","totalComments","offset","progress","ProgressBar","now","style","height","Projects","_Fragment","xs","Button","ButtonGroup","projects","i","xl","md","FeatherIcons","icon","React","_ref","ref","bsPrefix","pill","text","as","Component","prefix","useBootstrapPrefix","concat","displayName","defaultProps","size","vertical","rest","baseClass","role","func","child","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","width","_ref2","isChild","wrapperProps","cloneElement"],"sourceRoot":""}