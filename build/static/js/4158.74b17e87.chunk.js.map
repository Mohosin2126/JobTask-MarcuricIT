{"version":3,"file":"static/js/4158.74b17e87.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","_excluded","manager","useModalManager","provided","modalManager","ModalManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","useState","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","document","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","handleHidden","arguments","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","Math","abs","window","innerWidth","documentElement","clientWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","concat","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","element","adjust","actual","dataset","parseFloat","restore","super","classList","hasClass","baseVal","marginProp","qsa","el","sharedManager","getSharedManager","options","propTypes","PropTypes","type","classNames","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}