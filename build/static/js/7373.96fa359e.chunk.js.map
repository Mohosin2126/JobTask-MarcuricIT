{"version":3,"file":"static/js/7373.96fa359e.chunk.js","mappings":"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","sources":["components/FileUploader.tsx","pages/forms/FileUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\nimport classNames from \"classnames\";\n\ninterface FileType extends File {\n  preview?: string;\n  formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n  onFileUpload?: (files: FileType[]) => void;\n  showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n  const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n  /**\n   * Handled the accepted files and shows the preview\n   */\n  const handleAcceptedFiles = (files: FileType[]) => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map((file) =>\n        Object.assign(file, {\n          preview:\n            file[\"type\"].split(\"/\")[0] === \"image\"\n              ? URL.createObjectURL(file)\n              : null,\n          formattedSize: formatBytes(file.size),\n        })\n      );\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n\n  /**\n   * Formats the size\n   */\n  const formatBytes = (bytes: number, decimals: number = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  /*\n   * Removes the selected file\n   */\n  const removeFile = (e: any, fileIndex: number) => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return (\n    <>\n      <Dropzone\n        {...props}\n        onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div\n            className={classNames(\"dropzone\", \"dz-clickable\", {\n              \"dz-started\": selectedFiles && selectedFiles.length > 0,\n            })}\n          >\n            <div {...getRootProps()}>\n              <div className=\"dz-message needsclick\">\n                <input {...getInputProps()} />\n                <i className=\"h1 text-muted uil-cloud-upload\"></i>\n                <h3>Drop files here or click to upload.</h3>\n                <span className=\"text-muted \">\n                  (This is just a demo dropzone. Selected files are{\" \"}\n                  <strong>not</strong> actually uploaded.)\n                </span>\n              </div>\n              {props.showPreview &&\n                (selectedFiles || []).map((f, i) => {\n                  return (\n                    <React.Fragment key={i}>\n                      {f.preview && (\n                        <div\n                          onClick={(e) => e.stopPropagation()}\n                          className=\"dz-preview dz-processing dz-error dz-complete dz-image-preview\"\n                        >\n                          <div className=\"dz-image\">\n                            <img\n                              key={i}\n                              data-dz-thumbnail=\"\"\n                              alt={f.name}\n                              src={f.preview}\n                            />\n                          </div>\n\n                          <div className=\"dz-details\">\n                            <div className=\"dz-size\">\n                              <span data-dz-size=\"\">\n                                <strong>{f.formattedSize}</strong> KB\n                              </span>\n                            </div>\n                            <div className=\"dz-filename\">\n                              <span data-dz-name=\"\">{f.name}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"dz-remove\">\n                            <Button\n                              variant=\"\"\n                              onClick={(e) => removeFile(e, i)}\n                            >\n                              <i className=\"uil uil-multiply\"></i>\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                      {!f.preview && (\n                        <div\n                          onClick={(e) => e.stopPropagation()}\n                          className=\"dz-preview dz-file-preview dz-processing dz-error dz-complete\"\n                        >\n                          <div className=\"dz-image\">\n                            <img data-dz-thumbnail=\"\" alt=\"\" />\n                          </div>\n                          <div className=\"dz-details\">\n                            <div className=\"dz-size\">\n                              <span data-dz-size=\"\">\n                                <strong>{f.formattedSize}</strong> KB\n                              </span>\n                            </div>\n                            <div className=\"dz-filename\">\n                              <span data-dz-name=\"\">{f.name}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"dz-remove\">\n                            <Button\n                              variant=\"\"\n                              onClick={(e) => removeFile(e, i)}\n                            >\n                              <i className=\"uil uil-multiply\"></i>\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                    </React.Fragment>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n      </Dropzone>\n    </>\n  );\n};\n\nFileUploader.defaultProps = {\n  showPreview: true,\n};\n\nexport default FileUploader;\n","import React from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport FileUploader from \"../../components/FileUploader\";\n\nconst FileUpload = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/upload\" },\n          { label: \"File Upload\", path: \"/forms/upload\", active: true },\n        ]}\n        title={\"File Upload\"}\n      />\n\n      <Row>\n        <Col xs={12}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title mt-0 mb-1\">Dropzone File Upload</h4>\n              <p className=\"sub-header\">\n                DropzoneJS is an open source library that provides drag’n’drop\n                file uploads with image previews.\n              </p>\n\n              <FileUploader\n                onFileUpload={(files) => {\n                  console.log(\"Uploaded files - \", files);\n                }}\n              />\n\n              <div className=\"clearfix text-end mt-3\">\n                <Button variant=\"danger\">\n                  <i className=\"uil uil-arrow-right me-1\"></i> Submit\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FileUpload;\n"],"names":["FileUploader","props","selectedFiles","setSelectedFiles","useState","formatBytes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","removeFile","e","fileIndex","newFiles","splice","onFileUpload","_jsx","_Fragment","children","Dropzone","onDrop","acceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","size","push","handleAcceptedFiles","_ref","getRootProps","getInputProps","className","classNames","_jsxs","f","React","onClick","stopPropagation","alt","name","src","Button","variant","defaultProps","FileUpload","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","console"],"sourceRoot":""}