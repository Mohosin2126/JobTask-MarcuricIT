{"version":3,"file":"static/js/1153.8f392c48.chunk.js","mappings":"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","sources":["components/Accounting/DoctorReport/DoctorReportForms.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport PageTitle from \"../../PageTitle\";\n\nconst DoctorReportForms = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [selectedDateRange, setSelectedDateRange] = useState(\"\");\n    const options: Array<OptionTypes> = [\n        { id: 1, value: \"Sample\", label: \"Sample\" },\n        { id: 2, value: \"drJaneSmith\", label: \"Dr Jane Smith\" }, \n        { id: 3, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 4, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 5, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n    ];\n\n    const onChangeSingleSelection = (selected: OptionTypes[]) => {\n        setSingleSelections(selected);\n    };\n    const DaysOptions = [\n        { id: 1, label: \"Today\" },\n        { id: 2, label: \"Yesterday\" },\n        { id: 3, label: \"Last 7 days\" },\n        { id: 4, label: \"Last 30 days\" },\n        { id: 5, label: \"This month\" },\n        { id: 6, label: \"Last month\" },\n        { id: 7, label: \"This year\" },\n        { id: 8, label: \"Last year\" },\n    ];\n\n    const handleOptionClick = (label) => {\n        let minDate, maxDate;\n        const currentDate = new Date();\n        switch (label) {\n            case \"Today\":\n                minDate = currentDate;\n                maxDate = currentDate;\n                break;\n            case \"Yesterday\":\n                minDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);\n                maxDate = minDate;\n                break;\n            case \"Last 7 days\":\n                minDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"Last 30 days\":\n                minDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"This month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                maxDate = currentDate;\n                break;\n            case \"Last month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                break;\n            case \"This year\":\n                minDate = new Date(currentDate.getFullYear(), 0, 1);\n                maxDate = currentDate;\n                break;\n            case \"Last year\":\n                minDate = new Date(currentDate.getFullYear() - 1, 0, 1);\n                maxDate = new Date(currentDate.getFullYear() - 1, 11, 31);\n                break;\n            default:\n                break;\n        }\n        setSelectedDateRange(`${minDate.toLocaleDateString()} - ${maxDate.toLocaleDateString()}`);\n    };\n    return (\n        <>\n       <PageTitle\n                breadCrumbItems={[\n                    { label: \"Accounting\", path: \"/components/accounting-report\", active: true },\n                ]}\n                title={\"Doctor Report\"}\n            />\n        <Card >\n                <h4 class=\"px-2 bg-primary text-light p-2\">Doctor Report</h4>\n            <Card.Body>\n            <Row>\n                <Col>\n                    <p className=\"mb-1 fw-bold\">Date range:\n                    </p>\n                    <Typeahead\n                        id=\"select2\"\n                        labelKey={\"label\"}\n                        multiple={false}\n                        options={DaysOptions}\n                        placeholder=\"Choose a date range...\"\n                        selected={[{ label: selectedDateRange }]} // Display selected date range in the input field\n                        onChange={(selected) => {\n                            if (selected.length > 0) {\n                                handleOptionClick(selected[0].label);\n                            }\n                        }}\n                    />\n                </Col>\n                <Col>\n                    <p className=\"mb-1 fw-bold\">Doctor:</p>\n                    <Typeahead\n                        id=\"select2\"\n                        labelKey={\"label\"}\n                        multiple={false}\n                        onChange={onChangeSingleSelection}\n                        options={options}\n                        placeholder=\"Choose a state...\"\n                        selected={singleSelections}\n                    />\n                </Col>\n                <Col>\n                    <p className=\"mb-1 fw-bold\">\n                        Show Details</p>\n                    <Form.Check\n                        type=\"checkbox\"\n                        id=\"autoSizingCheck\"\n                        label=\"Show Group tests\"\n                    />\n                    <Form.Check\n                        type=\"checkbox\"\n                        id=\"autoSizingCheck\"\n                        label=\"Show Payment\"\n                    />\n                </Col>\n                <Col>\n                <Button class=\"primary width-xs align-center\"><i class=\"bi bi-gear-fill p-2\"></i><span>Save</span></Button>\n                </Col>\n            </Row>\n            </Card.Body>\n\n        </Card> </>\n    );\n};\n\nexport default DoctorReportForms;"],"names":["DoctorReportForms","singleSelections","setSingleSelections","useState","selectedDateRange","setSelectedDateRange","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Card","class","Row","Col","className","Typeahead","id","labelKey","multiple","options","placeholder","selected","onChange","length","minDate","maxDate","currentDate","Date","getTime","getFullYear","getMonth","concat","toLocaleDateString","handleOptionClick","value","Form","type","Button"],"sourceRoot":""}