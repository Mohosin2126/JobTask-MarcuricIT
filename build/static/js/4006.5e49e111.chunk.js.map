{"version":3,"file":"static/js/4006.5e49e111.chunk.js","mappings":"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","sources":["components/Accounting/AccountingReport/AccountingReport.jsx"],"sourcesContent":["import { Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { useState } from \"react\";\nimport PageTitle from \"../../PageTitle\";\n\nconst AccountingReport = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [selectedDateRange, setSelectedDateRange] = useState(\"\");\n    const options: Array<OptionTypes> = [\n        { id: 1, value: \"Sample\", label: \"Sample\" },\n        { id: 2, value: \"drJaneSmith\", label: \"Dr Jane Smith\" }, \n        { id: 3, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 4, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 5, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n    ];\n\n    const onChangeSingleSelection = (selected: OptionTypes[]) => {\n        setSingleSelections(selected);\n    };\n    const DaysOptions = [\n        { id: 1, label: \"Today\" },\n        { id: 2, label: \"Yesterday\" },\n        { id: 3, label: \"Last 7 days\" },\n        { id: 4, label: \"Last 30 days\" },\n        { id: 5, label: \"This month\" },\n        { id: 6, label: \"Last month\" },\n        { id: 7, label: \"This year\" },\n        { id: 8, label: \"Last year\" },\n    ];\n\n    const handleOptionClick = (label) => {\n        let minDate, maxDate;\n        const currentDate = new Date();\n        switch (label) {\n            case \"Today\":\n                minDate = currentDate;\n                maxDate = currentDate;\n                break;\n            case \"Yesterday\":\n                minDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);\n                maxDate = minDate;\n                break;\n            case \"Last 7 days\":\n                minDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"Last 30 days\":\n                minDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"This month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                maxDate = currentDate;\n                break;\n            case \"Last month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                break;\n            case \"This year\":\n                minDate = new Date(currentDate.getFullYear(), 0, 1);\n                maxDate = currentDate;\n                break;\n            case \"Last year\":\n                minDate = new Date(currentDate.getFullYear() - 1, 0, 1);\n                maxDate = new Date(currentDate.getFullYear() - 1, 11, 31);\n                break;\n            default:\n                break;\n        }\n        setSelectedDateRange(`${minDate.toLocaleDateString()} - ${maxDate.toLocaleDateString()}`);\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n\n                    { label: \"Accounting\", path: \"/components/accounting-report\", active: true },\n\n                ]}\n                title={\"Accounting Report\"}\n            />\n            <Card class=\"\">\n\n                <h4 class=\"px-2 bg-primary text-light p-2\">Accounting Report</h4>\n\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Date range:\n                            </p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey={\"label\"}\n                                multiple={false}\n                                options={DaysOptions}\n                                placeholder=\"Choose a date range...\"\n                                selected={[{ label: selectedDateRange }]} \n                                onChange={(selected) => {\n                                    if (selected.length > 0) {\n                                        handleOptionClick(selected[0].label);\n                                    }\n                                }}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Doctor:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey={\"label\"}\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a state...\"\n                                selected={singleSelections}\n                            />\n\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Test:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey={\"label\"}\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a state...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Culture:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey={\"label\"}\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a state...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">\n                                Show Details</p>\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"autoSizingCheck\"\n                                label=\"Show Group tests\"\n                            />\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"autoSizingCheck\"\n                                label=\"Show Expenses\"\n                            />\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"autoSizingCheck\"\n                                label=\"Show Profit\"\n                            />\n\n                        </Col>\n                        <Col>\n                            <Button class=\"primary width-xs align-center\"><i class=\"bi bi-gear-fill p-2\"></i><span>Save</span></Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card >\n        </>\n    );\n};\n\nexport default AccountingReport;"],"names":["AccountingReport","singleSelections","setSingleSelections","useState","selectedDateRange","setSelectedDateRange","options","id","value","label","onChangeSingleSelection","selected","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Card","class","Row","Col","className","Typeahead","labelKey","multiple","placeholder","onChange","length","minDate","maxDate","currentDate","Date","getTime","getFullYear","getMonth","concat","toLocaleDateString","handleOptionClick","Form","type","Button"],"sourceRoot":""}