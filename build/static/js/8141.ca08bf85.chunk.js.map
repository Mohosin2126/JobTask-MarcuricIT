{"version":3,"file":"static/js/8141.ca08bf85.chunk.js","mappings":"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","sources":["pages/other/Pricing.tsx","pages/other/data.tsx"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport FeatherIcons from \"feather-icons-react\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\n// dummy data\nimport { pricingPlans, PlanItemsTypes } from \"./data\";\n\ninterface PricingCardProps {\n  pricingPlans: PlanItemsTypes[];\n}\n\nconst PricingCard = ({ pricingPlans }: PricingCardProps) => {\n  return (\n    <Row>\n      {(pricingPlans || []).map((plan, idx) => {\n        return (\n          <Col lg={4} key={idx}>\n            <Card className=\"card-pricing\">\n              <Card.Body className=\"p-4\">\n                <div className=\"d-flex\">\n                  <div className=\"flex-grow-1\">\n                    <h5 className=\"mt-0 mb-2 fs-16\">{plan.name}</h5>\n                    <h2 className=\"mt-0 mb-2\">\n                      ${plan.price}{\" \"}\n                      <span className=\"fs-14\">/ {plan.duration}</span>\n                    </h2>\n                  </div>\n                  <div className=\"align-self-center flex-shrink-0\">\n                    <FeatherIcons\n                      icon={plan.icon}\n                      className=\"icon-dual icon-lg\"\n                    ></FeatherIcons>\n                  </div>\n                </div>\n\n                <ul className=\"card-pricing-features text-muted border-top pt-2 mt-2 ps-0 list-unstyled\">\n                  {(plan.features || []).map((feature, idx1) => {\n                    return (\n                      <li key={idx1}>\n                        <i className=\"uil uil-check text-success fs-15 me-1\"></i>\n                        {feature}\n                      </li>\n                    );\n                  })}\n                </ul>\n\n                <div className=\"mt-5 text-center\">\n                  <Button\n                    variant={plan.isRecommended ? \"primary\" : \"soft-primary\"}\n                    className=\"px-sm-4\"\n                  >\n                    <i className=\"uil uil-arrow-right me-1\"></i>Buy Now for $\n                    {plan.price}\n                  </Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\n// Pricing component\nconst Pricing = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Pages\", path: \"/pages/pricing\" },\n          { label: \"Pricing\", path: \"/pages/pricing\", active: true },\n        ]}\n        title={\"Pricing\"}\n      />\n\n      <Row className=\"justify-content-center\">\n        <Col xl={10}>\n          <div className=\"text-center my-4\">\n            <h3>Simple pricing for Everyone</h3>\n            <p className=\"text-muted\">\n              Fully functional accounts are starting from $19/month only\n            </p>\n          </div>\n\n          {/* pricing cards */}\n          <PricingCard pricingPlans={pricingPlans} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Pricing;\n","interface InvoiceItem {\n  id: number;\n  name: string;\n  description: string;\n  hours: number;\n  hour_rate: number;\n  total: number;\n}\n\ninterface Address {\n  owner: string;\n  line_1: string;\n  city: string;\n  state: string;\n  zip: number;\n  phone: string;\n}\n\nexport interface InvoiceTypes {\n  customer?: string;\n  notes?: string;\n  invoice_date?: string;\n  due_date?: string;\n  invoice_id?: string;\n  address: Address;\n  items: InvoiceItem[];\n  sub_total?: number;\n  discount?: number;\n  total?: number;\n}\n\nexport interface PlanItemsTypes {\n  id: number;\n  name: string;\n  icon: string;\n  price: number;\n  duration: string;\n  features: Array<string>;\n  isRecommended: boolean;\n}\n\ninterface MaintenanceQueryTypes {\n  icon: string;\n  title: string;\n  desc: string;\n}\n\nconst invoiceData: InvoiceTypes = {\n  invoice_id: \"000028\",\n  customer: \" Greeva Navadiya\",\n  notes:\n    \"All accounts are to be paid within 7 days from receipt of invoice. To be paid by cheque or credit card or direct payment online. If account is not paid within 7 days the credits details supplied as confirmation of work undertaken will be charged the agreed quoted fee noted above\",\n  invoice_date: \"Jul 17, 2019\",\n  due_date: \"Jul 27,2019\",\n  address: {\n    owner: \"Greeva Navadiya\",\n    line_1: \"795 Folsom Ave, Suite 600\",\n    city: \"San Francisco\",\n    state: \"CA\",\n    zip: 94107,\n    phone: \"(123) 456-7890\",\n  },\n  items: [\n    {\n      id: 1,\n      name: \"Web Design\",\n      description: \"2 Pages static website - my website\",\n      hours: 22,\n      hour_rate: 30,\n      total: 660.0,\n    },\n    {\n      id: 2,\n      name: \"Software Development\",\n      description: \"Invoice editor software - AB'c Software\",\n      hours: 112.5,\n      hour_rate: 35,\n      total: 3937.5,\n    },\n  ],\n  sub_total: 4597.5,\n  discount: 459.75,\n  total: 4137.75,\n};\n\nconst pricingPlans: PlanItemsTypes[] = [\n  {\n    id: 1,\n    name: \"Professional Pack\",\n    icon: \"users\",\n    price: 19,\n    duration: \"Month\",\n    features: [\n      \"10 GB Storage\",\n      \"500 GB Bandwidth\",\n      \"No Domain\",\n      \"Email Support\",\n      \"24x7 Support\",\n    ],\n    isRecommended: false,\n  },\n  {\n    id: 2,\n    name: \"Business Pack\",\n    icon: \"briefcase\",\n    price: 29,\n    duration: \"Month\",\n    features: [\n      \"50 GB Storage\",\n      \"900 GB Bandwidth\",\n      \"2 Domain\",\n      \"Email Support\",\n      \"24x7 Support\",\n    ],\n    isRecommended: true,\n  },\n  {\n    id: 3,\n    name: \"Enterprise Pack\",\n    icon: \"shopping-bag\",\n    price: 49,\n    duration: \"Month\",\n    features: [\n      \"100 GB Storage\",\n      \"Unlimited Bandwidth\",\n      \"Unlimited Domain\",\n      \"Email Support\",\n      \"24x7 Support\",\n    ],\n    isRecommended: false,\n  },\n];\n\nconst maintenanceQuery: MaintenanceQueryTypes[] = [\n  {\n    icon: \"uil-presentation-lines-alt\",\n    title: \"Why is the Site Down?\",\n    desc: \"If several languages coalesce, the grammar of the resulting language is more simple.\",\n  },\n  {\n    icon: \"uil-clock-eight\",\n    title: \"What is the Downtime?\",\n    desc: \"Everyone realizes why a new common language would be desirable one could refuse.\",\n  },\n  {\n    icon: \"uil-envelope\",\n    title: \"Do you need Support?\",\n    desc: \"You need to be sure there isn't anything embar.. Please contact us via email no-reply@domain.com\",\n  },\n];\n\nexport { invoiceData, pricingPlans, maintenanceQuery };\n"],"names":["PricingCard","_ref","pricingPlans","_jsx","Row","children","map","plan","idx","Col","lg","Card","className","_jsxs","name","price","duration","FeatherIcons","icon","features","feature","idx1","Button","variant","isRecommended","Pricing","React","PageTitle","breadCrumbItems","label","path","active","title","xl","invoiceData","invoice_id","customer","notes","invoice_date","due_date","address","owner","line_1","city","state","zip","phone","items","id","description","hours","hour_rate","total","sub_total","discount","maintenanceQuery","desc"],"sourceRoot":""}