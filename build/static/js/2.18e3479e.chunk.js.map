{"version":3,"file":"static/js/2.18e3479e.chunk.js","mappings":"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","sources":["components/Accounting/Expenses/Category.jsx","components/Accounting/Expenses/Date.jsx","components/Accounting/Expenses/Doctor.jsx","components/Accounting/Expenses/CreateExpenses.jsx","components/Datepicker.tsx"],"sourcesContent":["import  { useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst Category = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const CategoryOptions: Array<OptionTypes> = [\n        { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n        { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n        { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n    ]\n\n    const onChangeSingleSelection = (selected: OptionTypes[]) => {\n        setSingleSelections(selected);\n    }\n    return (\n            <Typeahead\n                id=\"select2\"\n                labelKey={\"label\"}\n                multiple={false}\n                onChange={onChangeSingleSelection}\n                options={CategoryOptions}\n                placeholder=\"Choose a state...\"\n                selected={singleSelections}\n            />\n        \n    );\n};\n\nexport default Category;","import { useState } from \"react\";\nimport ShreyuDatepicker from \"../../Datepicker\";\n\nconst DatePick = () => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const onDateChange = (date: Date) => {\n      if (date) {\n        setSelectedDate(date);\n      }\n    };\n    return (\n        <div>\n             <div>\n              <label className=\"form-label\">Single Date</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n        </div>\n    );\n};\n\nexport default DatePick;","import  { useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst Doctor = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const CategoryOptions: Array<OptionTypes> = [\n        { id: 1, value: \"Sample\", label: \"Sample\" },\n        { id: 2, value: \"drJaneSmith\", label: \"Dr Jane Smith\" }, \n        { id: 3, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 4, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 5, value: \"drJaneSmith\", label: \"Dr Jane Smith\" }, \n    ];\n\n    const onChangeSingleSelection = (selected: OptionTypes[]) => {\n        setSingleSelections(selected);\n    };\n\n    return (\n        <div>\n            <Typeahead\n                id=\"select2\"\n                labelKey={\"label\"}\n                multiple={false}\n                onChange={onChangeSingleSelection}\n                options={CategoryOptions}\n                placeholder=\"Choose a doctor...\"\n                selected={singleSelections}\n            />\n        </div>\n    );\n};\n\nexport default Doctor;\n","import { Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport SimpleMDEReact from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport PageTitle from \"../../../components/PageTitle\";\nimport Category from \"./Category\";\nimport DatePick from \"./Date\";\nimport Doctor from \"./Doctor\";\n\nconst CreateExpenses = () => {\n    const delay = 1000;\n    const options = {\n        autofocus: true,\n        autosave: {\n            enabled: true,\n            uniqueId: \"1\",\n            delay,\n        },\n    }\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n\n                    { label: \"Expenses\", path: \"/components/accounting-expenses\" },\n                    { label: \"Create Expenses\", path: \"/components/accounting-create-expenses\", active: true },\n                ]}\n                title={\"Expenses\"}\n            />\n            <Card>\n                <Card.Body>\n                    <div>\n                        <h4>Create Expenses</h4>\n                        <div className=\"container\">\n                            <div class=\"row\">\n                                <div class=\"col\">\n                                    <Card.Body >\n                                        <p className=\"mb-1 fw-bold\">Category</p>\n                                        <Category></Category>\n                                    </Card.Body>\n                                </div>\n                                <div class=\"col\">\n                                    <Card.Body >\n\n                                        <DatePick></DatePick>\n                                    </Card.Body>\n                                </div>\n                                <div class=\"col\">\n                                    <Card.Body >\n                                        <p className=\"mb-1 fw-bold\">Doctor</p>\n                                        <Doctor></Doctor>\n                                    </Card.Body>\n                                </div>\n                                <div class=\"col\">\n                                    <Card.Body >\n                                        <p className=\"mb-1 fw-bold\">Amount</p>\n                                        <Form.Group as={Row} >\n                                            <Col lg={10}>\n                                                <Form.Control\n                                                    id=\"example-number\"\n                                                    type=\"number\"\n                                                    name=\"number\"\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </Card.Body>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <h4 className=\"header-title mt-0 mb-1\">Notes</h4>\n                    <SimpleMDEReact id=\"1\" options={options} /> \n                    <Button class=\"primary width-xs\"><i class=\"bi bi-check-lg p-2\"></i><span>Save</span></Button>\n                </Card.Body>\n               \n            </Card>\n\n        </div>\n\n    );\n};\n\nexport default CreateExpenses;","import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n"],"names":["Category","singleSelections","setSingleSelections","useState","_jsx","Typeahead","id","labelKey","multiple","onChange","selected","options","value","label","placeholder","DatePick","selectedDate","setSelectedDate","Date","children","_jsxs","className","ShreyuDatepicker","hideAddon","date","onDateChange","Doctor","CreateExpenses","autofocus","autosave","enabled","uniqueId","delay","PageTitle","breadCrumbItems","path","active","title","Card","class","Form","as","Row","Col","lg","type","name","SimpleMDEReact","Button","DatepickerInput","forwardRef","props","ref","classNames","inputClass","onClick","onDateValueChange","console","log","DatepickerInputWithAddon","readOnly","input","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete"],"sourceRoot":""}