{"version":3,"file":"static/js/4006.63ab519c.chunk.js","mappings":"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","sources":["components/Accounting/AccountingReport/AccountingReport.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Row, Col, Card, Form, Button, Table } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport PageTitle from \"../../PageTitle\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nconst AccountingReport = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [selectedDateRange, setSelectedDateRange] = useState(\"\");\n    const [showDetails, setShowDetails] = useState({\n        showGroupTests: false,\n        showExpenses: false,\n        showProfit: false,\n    });\n    const [tableData, setTableData] = useState([]);\n    const tableRef = useRef(null);\n\n    const options = [\n        { id: 1, value: \"Sample\", label: \"Sample\" },\n        { id: 2, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n        { id: 3, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 4, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 5, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n    ];\n\n    const onChangeSingleSelection = (selected) => {\n        setSingleSelections(selected);\n    };\n\n    const DaysOptions = [\n        { id: 1, label: \"Today\" },\n        { id: 2, label: \"Yesterday\" },\n        { id: 3, label: \"Last 7 days\" },\n        { id: 4, label: \"Last 30 days\" },\n        { id: 5, label: \"This month\" },\n        { id: 6, label: \"Last month\" },\n        { id: 7, label: \"This year\" },\n        { id: 8, label: \"Last year\" },\n    ];\n\n    const handleOptionClick = (label) => {\n        let minDate, maxDate;\n        const currentDate = new Date();\n        switch (label) {\n            case \"Today\":\n                minDate = currentDate;\n                maxDate = currentDate;\n                break;\n            case \"Yesterday\":\n                minDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);\n                maxDate = minDate;\n                break;\n            case \"Last 7 days\":\n                minDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"Last 30 days\":\n                minDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"This month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                maxDate = currentDate;\n                break;\n            case \"Last month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                break;\n            case \"This year\":\n                minDate = new Date(currentDate.getFullYear(), 0, 1);\n                maxDate = currentDate;\n                break;\n            case \"Last year\":\n                minDate = new Date(currentDate.getFullYear() - 1, 0, 1);\n                maxDate = new Date(currentDate.getFullYear() - 1, 11, 31);\n                break;\n            default:\n                break;\n        }\n        setSelectedDateRange(`${minDate.toLocaleDateString()} - ${maxDate.toLocaleDateString()}`);\n    };\n\n    const handleShowDetailsChange = (event) => {\n        setShowDetails({\n            ...showDetails,\n            [event.target.name]: event.target.checked,\n        });\n    };\n\n    const handleSave = () => {\n        const tableRow = {\n            dateRange: selectedDateRange,\n            doctor: singleSelections.length > 0 ? singleSelections[0].label : \"\",\n            showGroupTests: showDetails.showGroupTests,\n            showExpenses: showDetails.showExpenses,\n            showProfit: showDetails.showProfit,\n        };\n\n        setTableData([tableRow]);\n    };\n\n    const handleDownloadPDF = () => {\n        const input = tableRef.current;\n\n        html2canvas(input).then((canvas) => {\n            const imgData = canvas.toDataURL(\"image/png\");\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n            const width = pdf.internal.pageSize.getWidth();\n            const height = pdf.internal.pageSize.getHeight();\n            pdf.addImage(imgData, \"JPEG\", 0, 0, width, height);\n            pdf.save(\"accounting_report.pdf\");\n        });\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"Accounting\", path: \"/components/accounting-report\", active: true },\n                ]}\n                title={\"Accounting Report\"}\n            />\n            <Card>\n                <h4 className=\"px-2 bg-primary text-light p-2\">Accounting Report</h4>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Date range:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                options={DaysOptions}\n                                placeholder=\"Choose a date range...\"\n                                selected={[{ label: selectedDateRange }]}\n                                onChange={(selected) => {\n                                    if (selected.length > 0) {\n                                        handleOptionClick(selected[0].label);\n                                    }\n                                }}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Doctor:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a doctor...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Test:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a test...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Culture:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a culture...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Show Details:</p>\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"showGroupTests\"\n                                name=\"showGroupTests\"\n                                label=\"Show Group tests\"\n                                onChange={handleShowDetailsChange}\n                            />\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"showExpenses\"\n                                name=\"showExpenses\"\n                                label=\"Show Expenses\"\n                                onChange={handleShowDetailsChange}\n                            />\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"showProfit\"\n                                name=\"showProfit\"\n                                label=\"Show Profit\"\n                                onChange={handleShowDetailsChange}\n                            />\n                        </Col>\n                        <Col>\n                            <Button className=\"primary width-xs align-center\" onClick={handleSave}>\n                                <i className=\"bi bi-gear-fill p-2\"></i>\n                                <span>Save</span>\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n            {tableData.length > 0 && (\n                <Card className=\"mt-3\">\n                    <Card.Body>\n                        <Card.Title as=\"h5\" className=\"mb-4\">Accounting Report</Card.Title>\n                        <Table striped bordered hover responsive=\"sm\" variant=\"dark\" ref={tableRef}>\n                            <thead>\n                                <tr>\n                                    <th>Date Range</th>\n                                    <th>Doctor</th>\n                                    <th>Show Group Tests</th>\n                                    <th>Show Expenses</th>\n                                    <th>Show Profit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tableData.map((row, index) => (\n                                    <tr key={index}>\n                                        <td>{row.dateRange}</td>\n                                        <td>{row.doctor}</td>\n                                        <td>{row.showGroupTests ? \"Yes\" : \"No\"}</td>\n                                        <td>{row.showExpenses ? \"Yes\" : \"No\"}</td>\n                                        <td>{row.showProfit ? \"Yes\" : \"No\"}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <Button className=\"primary width-xs align-center\" onClick={handleDownloadPDF}>\n                            <i className=\"bi bi-download p-2\"></i>\n                            <span>Download as PDF</span>\n                        </Button>\n                    </Card.Body>\n                </Card>\n            )}\n        </>\n    );\n};\n\nexport default AccountingReport;\n"],"names":["AccountingReport","singleSelections","setSingleSelections","useState","selectedDateRange","setSelectedDateRange","showDetails","setShowDetails","showGroupTests","showExpenses","showProfit","tableData","setTableData","tableRef","useRef","options","id","value","label","onChangeSingleSelection","selected","handleShowDetailsChange","event","target","name","checked","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Card","className","Row","Col","Typeahead","labelKey","multiple","placeholder","onChange","length","minDate","maxDate","currentDate","Date","getTime","getFullYear","getMonth","concat","toLocaleDateString","handleOptionClick","Form","type","Button","onClick","handleSave","tableRow","dateRange","doctor","as","Table","striped","bordered","hover","responsive","variant","ref","map","row","index","handleDownloadPDF","input","current","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","width","internal","pageSize","getWidth","height","getHeight","addImage","save"],"sourceRoot":""}