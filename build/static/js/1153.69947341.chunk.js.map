{"version":3,"file":"static/js/1153.69947341.chunk.js","mappings":"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","sources":["components/Accounting/DoctorReport/DoctorReportForms.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Button, Card, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport PageTitle from \"../../PageTitle\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nconst DoctorReportForms = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [selectedDateRange, setSelectedDateRange] = useState(\"\");\n    const [showDetails, setShowDetails] = useState({\n        showGroupTests: false,\n        showPayment: false,\n    });\n    const [tableData, setTableData] = useState([]);\n    const tableRef = useRef(null); // Define table reference\n\n    const options = [\n        { id: 1, value: \"Sample\", label: \"Sample\" },\n        { id: 2, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n        { id: 3, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 4, value: \"drJohnDoe\", label: \"Dr John Doe\" },\n        { id: 5, value: \"drJaneSmith\", label: \"Dr Jane Smith\" },\n    ];\n\n    const DaysOptions = [\n        { id: 1, label: \"Today\" },\n        { id: 2, label: \"Yesterday\" },\n        { id: 3, label: \"Last 7 days\" },\n        { id: 4, label: \"Last 30 days\" },\n        { id: 5, label: \"This month\" },\n        { id: 6, label: \"Last month\" },\n        { id: 7, label: \"This year\" },\n        { id: 8, label: \"Last year\" },\n    ];\n\n    const handleOptionClick = (label) => {\n        let minDate, maxDate;\n        const currentDate = new Date();\n        switch (label) {\n            case \"Today\":\n                minDate = currentDate;\n                maxDate = currentDate;\n                break;\n            case \"Yesterday\":\n                minDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);\n                maxDate = minDate;\n                break;\n            case \"Last 7 days\":\n                minDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"Last 30 days\":\n                minDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n                maxDate = currentDate;\n                break;\n            case \"This month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n                maxDate = currentDate;\n                break;\n            case \"Last month\":\n                minDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n                maxDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\n                break;\n            case \"This year\":\n                minDate = new Date(currentDate.getFullYear(), 0, 1);\n                maxDate = currentDate;\n                break;\n            case \"Last year\":\n                minDate = new Date(currentDate.getFullYear() - 1, 0, 1);\n                maxDate = new Date(currentDate.getFullYear() - 1, 11, 31);\n                break;\n            default:\n                break;\n        }\n        setSelectedDateRange(`${minDate.toLocaleDateString()} - ${maxDate.toLocaleDateString()}`);\n    };\n\n    const onChangeSingleSelection = (selected) => {\n        setSingleSelections(selected);\n    };\n\n    const handleShowDetailsChange = (event) => {\n        setShowDetails({\n            ...showDetails,\n            [event.target.name]: event.target.checked,\n        });\n    };\n\n    const handleSave = () => {\n        const tableRow = {\n            dateRange: selectedDateRange,\n            doctor: singleSelections.length > 0 ? singleSelections[0].label : \"\",\n            showGroupTests: showDetails.showGroupTests,\n            showPayment: showDetails.showPayment,\n        };\n\n        setTableData([tableRow]);\n    };\n\n    const handleDownloadPDF = () => {\n        const input = tableRef.current;\n\n        html2canvas(input).then((canvas) => {\n            const imgData = canvas.toDataURL(\"image/png\");\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n            const width = pdf.internal.pageSize.getWidth();\n            const height = pdf.internal.pageSize.getHeight();\n            pdf.addImage(imgData, \"JPEG\", 0, 0, width, height);\n            pdf.save(\"contractor_report.pdf\");\n        });\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"Doctor Report\", path: \"/components/accounting-report\", active: true },\n                ]}\n                title={\"Accounting\"}\n            />\n            <Card>\n                <h4 className=\"px-2 bg-primary text-light p-2\">Doctor Reports</h4>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Date range:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                options={DaysOptions}\n                                placeholder=\"Choose a date range...\"\n                                selected={[{ label: selectedDateRange }]}\n                                onChange={(selected) => {\n                                    if (selected.length > 0) {\n                                        handleOptionClick(selected[0].label);\n                                    }\n                                }}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Doctor:</p>\n                            <Typeahead\n                                id=\"select2\"\n                                labelKey=\"label\"\n                                multiple={false}\n                                onChange={onChangeSingleSelection}\n                                options={options}\n                                placeholder=\"Choose a doctor...\"\n                                selected={singleSelections}\n                            />\n                        </Col>\n                        <Col>\n                            <p className=\"mb-1 fw-bold\">Show Details</p>\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"showGroupTests\"\n                                name=\"showGroupTests\"\n                                label=\"Show Group tests\"\n                                onChange={handleShowDetailsChange}\n                            />\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"showPayment\"\n                                name=\"showPayment\"\n                                label=\"Show Payment\"\n                                onChange={handleShowDetailsChange}\n                            />\n                        </Col>\n                        <Col>\n                            <Button className=\"primary width-xs align-center\" onClick={handleSave}>\n                                <i className=\"bi bi-gear-fill p-2\"></i>\n                                <span>Save</span>\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n            {tableData.length > 0 && (\n                <Card className=\"mt-3\">\n                    <Card.Body>\n                        <Card.Title as=\"h5\" className=\"mb-4\">Accounting Report</Card.Title>\n                        <Table striped bordered hover responsive=\"sm\" variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Date Range</th>\n                                    <th>Doctor</th>\n                                    <th>Show Group Tests</th>\n                                    <th>Show Payment</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tableData.map((row, index) => (\n                                    <tr key={index}>\n                                        <td>{row.dateRange}</td>\n                                        <td>{row.doctor}</td>\n                                        <td>{row.showGroupTests ? \"Yes\" : \"No\"}</td>\n                                        <td>{row.showPayment ? \"Yes\" : \"No\"}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <Button className=\"primary width-xs align-center\" onClick={handleDownloadPDF}>\n                            <i className=\"bi bi-download p-2\"></i>\n                            <span>Download as PDF</span>\n                        </Button>\n                    </Card.Body>\n                </Card>\n            )}\n        </>\n    );\n};\n\nexport default DoctorReportForms;\n"],"names":["DoctorReportForms","singleSelections","setSingleSelections","useState","selectedDateRange","setSelectedDateRange","showDetails","setShowDetails","showGroupTests","showPayment","tableData","setTableData","tableRef","useRef","handleShowDetailsChange","event","target","name","checked","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Card","className","Row","Col","Typeahead","id","labelKey","multiple","options","placeholder","selected","onChange","length","minDate","maxDate","currentDate","Date","getTime","getFullYear","getMonth","concat","toLocaleDateString","handleOptionClick","value","Form","type","Button","onClick","handleSave","tableRow","dateRange","doctor","as","Table","striped","bordered","hover","responsive","variant","map","row","index","handleDownloadPDF","input","current","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","width","internal","pageSize","getWidth","height","getHeight","addImage","save"],"sourceRoot":""}